// @mixin main-title {
//   @include standard-margins;
//   @include backupfont(serif);
//   text-align: center;
//   font-size: 2em;
//   @include mq(tablet){
//     font-size: 3.375em;  
//   }
// }

@mixin usefont($font: serif) {
  @if $font == sans {
    font-family: Lato;
  }
  
  @if $font == serif {
    font-family: Merriweather;
  }

  @if $font == fancy {
    font-family: Playfair Display;
  }

}

@mixin backupfont($font: sans) {
  @if $font == sans {
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  }
  @if $font == serif {
    font-family: Georgia, Times, serif;
  }
}

@mixin standard-margins {
  margin-top: 0;
  margin-bottom: 22px;
  margin-bottom: 1.375rem;
  margin-left: auto;
  margin-right: auto;
}

@mixin bigger-margins {
  margin-top: 0;
  margin-bottom: 32px;
  margin-bottom: 2em;
  margin-left: auto;
  margin-right: auto;
}

@mixin refined-link {
  background-image: linear-gradient(to bottom, rgba(0,0,0,0) 50%, $brand-blue 50%);
  background-repeat: repeat-x;
  background-size: 2px 2px;
  background-position: 0 19px;
}

/*
 ********** MEDIA QUERIES *******************
 */

$palm-end:              $tablet-start - 0.01em;
$tablet-end:            $desk-start - 0.01em;

@mixin mq($media-query){

  @if $media-query == tablet{
    @media only screen and (min-width:$tablet-start) { @content; }
  }
  
  @if $media-query == desktop{
    @media only screen and (min-width:$desk-start) { @content; }
  }

  @if $media-query == widescreen{
    @media only screen and (min-width:$widescreen-start) { @content; }
  }

  // Avoid these unless absolutely necessary 

  // Targets ONLY smartphone size
  @if $media-query == smartphone {
    @media only screen and (max-width:$palm-end) { @content; }
  }

  // Targets smartphone and tablet only
  // This could be the default and you could use 'desktop' as the mq.
  @if $media-query == portable{
    @media only screen and (max-width:$tablet-end) { @content; }
  }
}

@mixin custom-mq($min-width: $desk-start){
  @if $min-width > 300 {
    // assume $min-width is in pixels, so convert to ems
    $min-width: $min-width / 16 * 1em;
  }   
  @media only screen and (min-width: $min-width) { @content; }
}